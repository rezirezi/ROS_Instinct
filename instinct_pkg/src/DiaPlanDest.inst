// *** Instinct Robot Plan generated by dia/instinctgen.py ***
// *** 2019-08-12 23:46:16 C:\Users\tsulu\Downloads\Instinct-RobotWorld-master\Instinct-RobotWorld-master\plans\DiaPlanDest.inst

// *** First, clear the old plan and initialise the buffers ***
PLAN R C
// AP=5, APE=13, C=5, CE=9, D=2, A=10
PLAN R I 5 13 5 9 2 10

// *** These are the Plan Elements. ***

// Template for Drives
// Drive: DestReached
// 	Children: C1
//	Priority=250
//	Interval=1
//	Sense=IsDest
//	Comparator=TR	// EQ, NE, GT, LT, TR, FL
//	SenseValue=25
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
//	RampIncrement=0
//	UrgencyMultiplier=0
//	RampInterval=0
PLAN A D 42 43 250 1 10 4 25 0 0 0 0 0

// (NULL)
// ActionPattern: AP2
// 	Parents: LeftObst, RightObst
// 	Children: APE5, APE4
PLAN A P 10

// (NULL)
// ActionPattern: AP3
// 	Parents: ObstLeft
// 	Children: APE6, APE7
PLAN A P 20

// (NULL)
// ActionPattern: AP1
// 	Parents: CE1
// 	Children: APE2, APE1
PLAN A P 2

// (NULL)
// ActionPattern: AP4
// 	Parents: AngClearCE, AngClearCE2
// 	Children: APE12, APE11, APE10, APE9, APE8
PLAN A P 24

// (NULL)
// ActionPattern: AP5
// 	Parents: ObstLeft
// 	Children: APE14, APE13
PLAN A P 35

// (NULL)
// CompetenceElement: AngNotClearCE
// 	Parents: AngClearC
// 	Children: AngClearC
//	Priority=1
//	RetryLimit=0
//	Sense=FrontLeft
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=30
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 19 17 17 1 0 1 3 30 0 0

// (NULL)
// CompetenceElement: RightObst
// 	Parents: IsClear
// 	Children: AP2
//	Priority=2
//	RetryLimit=0
//	Sense=FrontRight
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=35
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 14 6 10 2 0 2 3 35 0 0

// Template for Drives
// Drive: Drive to Dest
// 	Children: C1
//	Priority=240
//	Interval=1
//	Sense=IsDest
//	Comparator=TR	// EQ, NE, GT, LT, TR, FL
//	SenseValue=25
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
//	RampIncrement=0
//	UrgencyMultiplier=0
//	RampInterval=0
PLAN A D 1 43 240 1 10 4 25 0 0 0 0 0

// (NULL)
// Action: FaceDest2
// 	Parents: APE12
//	Action=FaceDest
//	ActionValue=0025
PLAN A A 34 9 0025

// (NULL)
// CompetenceElement: AngClearCE
// 	Parents: AngClearC
// 	Children: AP4
//	Priority=1
//	RetryLimit=0
//	Sense=FrontLeft
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=30
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 18 17 24 1 0 1 3 30 0 0

// (NULL)
// ActionPatternElement: APE7
// 	Parents: AP3
// 	Children: AngClearC
//	Order=2
PLAN A L 21 20 17 2

// (NULL)
// CompetenceElement: LeftObst
// 	Parents: IsClear
// 	Children: AP2
//	Priority=2
//	RetryLimit=0
//	Sense=FrontLeft
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=35
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 9 6 10 2 0 1 3 35 0 0

// (NULL)
// Action: TurnRight
// 	Parents: APE6
//	Action=RotateRight
//	ActionValue=0
PLAN A A 23 0 0

// (NULL)
// Action: Stop4
// 	Parents: APE11
//	Action=Stop
//	ActionValue=0
PLAN A A 33 6 0

// (NULL)
// ActionPatternElement: APE12
// 	Parents: AP4
// 	Children: FaceDest2
//	Order=5
PLAN A L 32 24 34 5

// (NULL)
// ActionPatternElement: APE13
// 	Parents: AP5
// 	Children: TurnLeft
//	Order=1
PLAN A L 36 35 37 1

// (NULL)
// ActionPatternElement: APE10
// 	Parents: AP4
// 	Children: Sleep
//	Order=3
PLAN A L 27 24 31 3

// (NULL)
// ActionPatternElement: APE11
// 	Parents: AP4
// 	Children: Stop4
//	Order=4
PLAN A L 28 24 33 4

// (NULL)
// Action: TurnLeft
// 	Parents: APE13
//	Action=RotateRight
//	ActionValue=0
PLAN A A 37 0 0

// (NULL)
// ActionPatternElement: APE14
// 	Parents: AP5
// 	Children: AngClearC2
//	Order=2
PLAN A L 38 35 39 2

// (NULL)
// ActionPatternElement: APE1
// 	Parents: AP1
// 	Children: FaceDest
//	Order=1
PLAN A L 3 2 4 1

// (NULL)
// ActionPatternElement: APE2
// 	Parents: AP1
// 	Children: IsClear
//	Order=2
PLAN A L 5 2 6 2

// (NULL)
// ActionPatternElement: APE4
// 	Parents: AP2
// 	Children: Stop2
//	Order=1
PLAN A L 11 10 13 1

// (NULL)
// ActionPatternElement: APE5
// 	Parents: AP2
// 	Children: IsClear2
//	Order=2
PLAN A L 12 10 15 2

// (NULL)
// ActionPatternElement: APE6
// 	Parents: AP3
// 	Children: TurnRight
//	Order=1
PLAN A L 22 20 23 1

// Drive forward, avoiding objects as they are sensed
// Competence: AngClearC
// 	Parents: APE7, AngNotClearCE
// 	Children: AngNotClearCE, AngClearCE
//	UseORWithinCEGroup=1
PLAN A C 17 1

// (NULL)
// ActionPatternElement: APE8
// 	Parents: AP4
// 	Children: Stop3
//	Order=1
PLAN A L 25 24 29 1

// (NULL)
// ActionPatternElement: APE9
// 	Parents: AP4
// 	Children: Go2
//	Order=2
PLAN A L 26 24 30 2

// (NULL)
// CompetenceElement: Clear
// 	Parents: IsClear
// 	Children: Go
//	Priority=1
//	RetryLimit=0
//	Sense=FrontLeft
//	Comparator=GT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=36
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 7 6 8 1 0 1 2 36 0 0

// (NULL)
// Action: Stop3
// 	Parents: APE8
//	Action=Stop
//	ActionValue=0
PLAN A A 29 6 0

// (NULL)
// Action: Stop2
// 	Parents: APE4
//	Action=Stop
//	ActionValue=0
PLAN A A 13 6 0

// Drive forward, avoiding objects as they are sensed
// Competence: IsClear
// 	Parents: APE2
// 	Children: RightObst, LeftObst, Clear
//	UseORWithinCEGroup=1
PLAN A C 6 1

// Drive forward, avoiding objects as they are sensed
// Competence: AngClearC2
// 	Parents: APE14, AngNotClearCE2
// 	Children: AngNotClearCE2, AngClearCE2
//	UseORWithinCEGroup=1
PLAN A C 39 1

// (NULL)
// CompetenceElement: CE1
// 	Parents: C1
// 	Children: AP1
//	Priority=1
//	RetryLimit=0
//	Sense=Fifty
//	Comparator=TR	// EQ, NE, GT, LT, TR, FL
//	SenseValue=36
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 44 43 2 1 0 8 4 36 0 0

// Drive forward, avoiding objects as they are sensed
// Competence: C1
// 	Parents: Drive to Dest, DestReached
// 	Children: CE1
//	UseORWithinCEGroup=1
PLAN A C 43 1

// (NULL)
// Action: Go2
// 	Parents: APE9
//	Action=SetSpeed
//	ActionValue=2
PLAN A A 30 5 2

// (NULL)
// CompetenceElement: AngClearCE2
// 	Parents: AngClearC2
// 	Children: AP4
//	Priority=1
//	RetryLimit=0
//	Sense=FrontRight
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=30
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 40 39 24 1 0 2 3 30 0 0

// (NULL)
// CompetenceElement: AngNotClearCE2
// 	Parents: AngClearC2
// 	Children: AngClearC2
//	Priority=1
//	RetryLimit=0
//	Sense=FrontRight
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=30
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 41 39 39 1 0 2 3 30 0 0

// (NULL)
// Action: Sleep
// 	Parents: APE10
//	Action=Sleep
//	ActionValue=3
PLAN A A 31 10 3

// (NULL)
// CompetenceElement: ObstLeft
// 	Parents: IsClear2, IsClear2
// 	Children: AP3, AP5
//	Priority=1
//	RetryLimit=0
//	Sense=FrontC
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=0
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
PLAN A E 35 0 0 1 0 5 3 0 0 0

// (NULL)
// Action: Go
// 	Parents: Clear
//	Action=SetSpeed
//	ActionValue=4
PLAN A A 8 5 4

// (NULL)
// Action: FaceDest
// 	Parents: APE1
//	Action=FaceDest
//	ActionValue=0025
PLAN A A 4 9 0025

// Drive forward, avoiding objects as they are sensed
// Competence: IsClear2
// 	Parents: APE5
// 	Children: ObstLeft, ObstLeft
//	UseORWithinCEGroup=1
PLAN A C 15 1

// *** Plan Element Names follow ... ***

// Template for Drives
// Drive: DestReached
PELEM DestReached=42

// (NULL)
// ActionPattern: AP2
PELEM AP2=10

// (NULL)
// ActionPattern: AP3
PELEM AP3=20

// (NULL)
// ActionPattern: AP1
PELEM AP1=2

// (NULL)
// ActionPattern: AP4
PELEM AP4=24

// (NULL)
// ActionPattern: AP5
PELEM AP5=35

// (NULL)
// CompetenceElement: AngNotClearCE
PELEM AngNotClearCE=19

// (NULL)
// CompetenceElement: RightObst
PELEM RightObst=14

// Template for Drives
// Drive: Drive to Dest
PELEM Drive to Dest=1

// (NULL)
// Action: FaceDest2
PELEM FaceDest2=34

// (NULL)
// CompetenceElement: AngClearCE
PELEM AngClearCE=18

// (NULL)
// ActionPatternElement: APE7
PELEM APE7=21

// (NULL)
// CompetenceElement: LeftObst
PELEM LeftObst=9

// (NULL)
// Action: TurnRight
PELEM TurnRight=23

// (NULL)
// Action: Stop4
PELEM Stop4=33

// (NULL)
// ActionPatternElement: APE12
PELEM APE12=32

// (NULL)
// ActionPatternElement: APE13
PELEM APE13=36

// (NULL)
// ActionPatternElement: APE10
PELEM APE10=27

// (NULL)
// ActionPatternElement: APE11
PELEM APE11=28

// (NULL)
// Action: TurnLeft
PELEM TurnLeft=37

// (NULL)
// ActionPatternElement: APE14
PELEM APE14=38

// (NULL)
// ActionPatternElement: APE1
PELEM APE1=3

// (NULL)
// ActionPatternElement: APE2
PELEM APE2=5

// (NULL)
// ActionPatternElement: APE4
PELEM APE4=11

// (NULL)
// ActionPatternElement: APE5
PELEM APE5=12

// (NULL)
// ActionPatternElement: APE6
PELEM APE6=22

// Drive forward, avoiding objects as they are sensed
// Competence: AngClearC
PELEM AngClearC=17

// (NULL)
// ActionPatternElement: APE8
PELEM APE8=25

// (NULL)
// ActionPatternElement: APE9
PELEM APE9=26

// (NULL)
// CompetenceElement: Clear
PELEM Clear=7

// (NULL)
// Action: Stop3
PELEM Stop3=29

// (NULL)
// Action: Stop2
PELEM Stop2=13

// Drive forward, avoiding objects as they are sensed
// Competence: IsClear
PELEM IsClear=6

// Drive forward, avoiding objects as they are sensed
// Competence: AngClearC2
PELEM AngClearC2=39

// (NULL)
// CompetenceElement: CE1
PELEM CE1=44

// Drive forward, avoiding objects as they are sensed
// Competence: C1
PELEM C1=43

// (NULL)
// Action: Go2
PELEM Go2=30

// (NULL)
// CompetenceElement: AngClearCE2
PELEM AngClearCE2=40

// (NULL)
// CompetenceElement: AngNotClearCE2
PELEM AngNotClearCE2=41

// (NULL)
// Action: Sleep
PELEM Sleep=31

// (NULL)
// CompetenceElement: ObstLeft
PELEM ObstLeft=35

// (NULL)
// Action: Go
PELEM Go=8

// (NULL)
// Action: FaceDest
PELEM FaceDest=4

// Drive forward, avoiding objects as they are sensed
// Competence: IsClear2
PELEM IsClear2=15

// *** Plan output complete. RobotSenses and RobotActions follow ... ***

// Return true if a potential mate is detected
// RobotSense: SenseMate
//	SenseID=9
RSENSE SenseMate=9

// Returns random number 1-100
// RobotSense: Random
//	SenseID=7
RSENSE Random=7

// Return true if a potential mate is detected
// RobotSense: IsDest
//	SenseID=10
RSENSE IsDest=10

// Returns 50
// RobotSense: Fifty
//	SenseID=8
RSENSE Fifty=8

// Rear left sensor - returns 0-4
// RobotSense: RearLeft
//	SenseID=3
RSENSE RearLeft=3

// Front sensor comparator - + if right is further
// RobotSense: FrontC
//	SenseID=5
RSENSE FrontC=5

// Front left sensor - returns 0-4
// RobotSense: FrontLeft
//	SenseID=1
RSENSE FrontLeft=1

// Rear right sensor - returns 0-4
// RobotSense: RearRight
//	SenseID=4
RSENSE RearRight=4

// Front right sensor - returns 0-4
// RobotSense: FrontRight
//	SenseID=2
RSENSE FrontRight=2

// Rear sensor - returns 0-4
// RobotSense: Rear
//	SenseID=6
RSENSE Rear=6

// Mate with conspecific
// RobotAction: Mate
//	ActionID=8
RACTION Mate=8

// Move in the direction of travel by ActionValue units
// RobotAction: TurnLeft
//	ActionID=2
RACTION TurnLeft=2

// Stop moving.
// RobotAction: Stop
//	ActionID=6
RACTION Stop=6

// Rotate clockwise by ActionValue degrees. Must be a multiple of 45
// RobotAction: TurnRight
//	ActionID=3
RACTION TurnRight=3

// Srt the robot speed in units per clock tick.
// RobotAction: SetSpeed
//	ActionID=5
RACTION SetSpeed=5

// Always suceed
// RobotAction: Succeed
//	ActionID=7
RACTION Succeed=7

// Sleep for ActionValue clock cycles
// RobotAction: Sleep
//	ActionID=10
RACTION Sleep=10

// Always fail
// RobotAction: Fail
//	ActionID=16
RACTION Fail=16

// Rotate either clockwise or anti-clockwise by ActionValue degrees. Must be a multiple of 45. Random selection of direction.
// RobotAction: FaceDest
//	ActionID=9
RACTION FaceDest=9

// *** Output completed. ***
