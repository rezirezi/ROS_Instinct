// *** Instinct Robot Plan generated by dia/instinctgen.py ***
// *** 2019-08-17 22:02:16 C:\Users\tsulu\Downloads\Instinct-RobotWorld-master\Instinct-RobotWorld-master\plans\DiaPlan8.inst

// *** First, clear the old plan and initialise the buffers ***
PLAN R C
// AP=1, APE=4, C=0, CE=0, D=1, A=4
PLAN R I 1 4 0 0 1 4

// *** These are the Plan Elements. ***

// (NULL)
// Action: Sleep2
// 	Parents: SleepEl2
//	Action=Sleep
//	ActionValue=2
PLAN A A 9 10 2

// (NULL)
// ActionPatternElement: SleepEl
// 	Parents: GoNStop
// 	Children: Sleep
//	Order=1
PLAN A L 6 3 5 1

// (NULL)
// Action: Stop
// 	Parents: StopEl
//	Action=Stop
//	ActionValue=2
PLAN A A 7 6 2

// (NULL)
// ActionPattern: GoNStop
// 	Children: SleepEl2, StopEl, SleepEl, GoEl
PLAN A P 3

// (NULL)
// ActionPatternElement: SleepEl2
// 	Parents: GoNStop
// 	Children: Sleep2
//	Order=3
PLAN A L 10 3 9 3

// Action: Go
// 	Parents: DriveToDest
//	Action=SetSpeed
//	ActionValue=2
PLAN A A 2 5 2

// (NULL)
// Action: Sleep
// 	Parents: SleepEl
//	Action=Sleep
//	ActionValue=2
PLAN A A 5 10 2

// (NULL)
// ActionPatternElement: GoEl
// 	Parents: GoNStop
//	Order=0
PLAN A L 4 3 0 0

// Template for Drives
// Drive: DriveToDest
// 	Children: Go
//	Priority=240
//	Interval=0
//	Sense=IsDest
//	Comparator=TR	// EQ, NE, GT, LT, TR, FL
//	SenseValue=25
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
//	RampIncrement=0
//	UrgencyMultiplier=0
//	RampInterval=0
PLAN A D 1 2 240 0 10 4 25 0 0 0 0 0

// (NULL)
// ActionPatternElement: StopEl
// 	Parents: GoNStop
// 	Children: Stop
//	Order=2
PLAN A L 8 3 7 2

// *** Plan Element Names follow ... ***

// (NULL)
// Action: Sleep2
PELEM Sleep2=9

// (NULL)
// ActionPatternElement: SleepEl
PELEM SleepEl=6

// (NULL)
// Action: Stop
PELEM Stop=7

// (NULL)
// ActionPattern: GoNStop
PELEM GoNStop=3

// (NULL)
// ActionPatternElement: SleepEl2
PELEM SleepEl2=10

// Action: Go
PELEM Go=2

// (NULL)
// Action: Sleep
PELEM Sleep=5

// (NULL)
// ActionPatternElement: GoEl
PELEM GoEl=4

// Template for Drives
// Drive: DriveToDest
PELEM DriveToDest=1

// (NULL)
// ActionPatternElement: StopEl
PELEM StopEl=8

// *** Plan output complete. RobotSenses and RobotActions follow ... ***

// Return true if a potential mate is detected
// RobotSense: SenseMate
//	SenseID=9
RSENSE SenseMate=9

// Returns random number 1-100
// RobotSense: Random
//	SenseID=7
RSENSE Random=7

// Return true if a potential mate is detected
// RobotSense: IsDest
//	SenseID=10
RSENSE IsDest=10

// Returns 50
// RobotSense: Fifty
//	SenseID=8
RSENSE Fifty=8

// Rear left sensor - returns 0-4
// RobotSense: RearLeft
//	SenseID=3
RSENSE RearLeft=3

// Front sensor - returns 0-4
// RobotSense: FrontC
//	SenseID=5
RSENSE FrontC=5

// Front left sensor - returns 0-4
// RobotSense: FrontLeft
//	SenseID=1
RSENSE FrontLeft=1

// RobotSense: FrontMin
//	SenseID=11
RSENSE FrontMin=11

// Rear right sensor - returns 0-4
// RobotSense: RearRight
//	SenseID=4
RSENSE RearRight=4

// Front right sensor - returns 0-4
// RobotSense: FrontRight
//	SenseID=2
RSENSE FrontRight=2

// Rear sensor - returns 0-4
// RobotSense: Rear
//	SenseID=6
RSENSE Rear=6

// Always suceed
// RobotAction: RotateRight
//	ActionID=7
RACTION RotateRight=7

// Sleep for ActionValue clock cycles
// RobotAction: SetSpeed
//	ActionID=5
RACTION SetSpeed=5

// Stop moving.
// RobotAction: Stop
//	ActionID=6
RACTION Stop=6

// Rotate clockwise by ActionValue degrees. Must be a multiple of 45
// RobotAction: Turn
//	ActionID=3
RACTION Turn=3

// Move in the direction of travel by ActionValue units
// RobotAction: MoveBy
//	ActionID=2
RACTION MoveBy=2

// RobotAction: Sleep
//	ActionID=10
RACTION Sleep=10

// Always fail
// RobotAction: Fail
//	ActionID=16
RACTION Fail=16

// Mate with conspecific
// RobotAction: RotateLeft
//	ActionID=8
RACTION RotateLeft=8

// *** Output completed. ***
