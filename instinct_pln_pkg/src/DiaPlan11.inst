// *** Instinct Robot Plan generated by dia/instinctgen.py ***
// *** 2019-08-29 19:55:23 D:\DiaPlan11.inst

// *** First, clear the old plan and initialise the buffers ***
PLAN R C
// AP=2, APE=12, C=0, CE=0, D=4, A=6
PLAN R I 2 12 0 0 4 6

// *** These are the Plan Elements. ***

// Template for Drives
// Drive: FrontObstLeft
// 	Children: AP1
//	Priority=235
//	Interval=0
//	Sense=FrontLeft
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=30
//	SenseHysteresis=900
//	SenseFlexLatchHysteresis=0
//	RampIncrement=0
//	UrgencyMultiplier=0
//	RampInterval=0
PLAN A D 2 3 235 0 1 3 30 900 0 0 0 0

// Action: RotateRight
// 	Parents: APE2, APE8
//	Action=RotateRight
//	ActionValue=90
PLAN A A 6 7 90

// (NULL)
// ActionPattern: AP2
// 	Parents: FrontObstRight
// 	Children: APE7, APE8, APE9, APE10, APE11, APE12
PLAN A P 18

// Template for Drives
// Drive: Stop
// 	Children: STOP
//	Priority=250
//	Interval=0
//	Sense=IsDest
//	Comparator=GT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=24
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
//	RampIncrement=0
//	UrgencyMultiplier=0
//	RampInterval=0
PLAN A D 15 1 250 0 10 2 24 0 0 0 0 0

// ActionPattern: AP1
// 	Parents: FrontObstLeft
// 	Children: APE6, APE5, APE4, APE3, APE2, APE1
PLAN A P 3

// Action: STOP
// 	Parents: APE1, Stop, APE7
//	Action=Stop
//	ActionValue=0
PLAN A A 1 6 0

// Action: RotateLeft
// 	Parents: APE6, APE12
//	Action=RotateLeft
//	ActionValue=90
PLAN A A 9 8 90

// Template for Drives
// Drive: FrontObstRight
// 	Children: AP2
//	Priority=235
//	Interval=0
//	Sense=FrontRight
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=30
//	SenseHysteresis=900
//	SenseFlexLatchHysteresis=0
//	RampIncrement=0
//	UrgencyMultiplier=0
//	RampInterval=0
PLAN A D 17 18 235 0 2 3 30 900 0 0 0 0

// Action: STOP1
// 	Parents: APE5, APE11
//	Action=Stop
//	ActionValue=0
PLAN A A 8 6 0

// (NULL)
// ActionPatternElement: APE12
// 	Parents: AP2
// 	Children: RotateLeft
//	Order=2
PLAN A L 24 18 9 2

// (NULL)
// ActionPatternElement: APE10
// 	Parents: AP2
// 	Children: Sleep
//	Order=4
PLAN A L 22 18 7 4

// (NULL)
// ActionPatternElement: APE11
// 	Parents: AP2
// 	Children: STOP1
//	Order=5
PLAN A L 23 18 8 5

// ActionPatternElement: APE1
// 	Parents: AP1
// 	Children: STOP
//	Order=1
PLAN A L 4 3 1 1

// ActionPatternElement: APE2
// 	Parents: AP1
// 	Children: RotateRight
//	Order=2
PLAN A L 5 3 6 2

// ActionPatternElement: APE3
// 	Parents: AP1
// 	Children: Go1
//	Order=3
PLAN A L 11 3 10 3

// ActionPatternElement: APE4
// 	Parents: AP1
// 	Children: Sleep
//	Order=4
PLAN A L 12 3 7 4

// ActionPatternElement: APE5
// 	Parents: AP1
// 	Children: STOP1
//	Order=5
PLAN A L 13 3 8 5

// ActionPatternElement: APE6
// 	Parents: AP1
// 	Children: RotateLeft
//	Order=6
PLAN A L 14 3 9 6

// (NULL)
// ActionPatternElement: APE7
// 	Parents: AP2
// 	Children: STOP
//	Order=1
PLAN A L 19 18 1 1

// (NULL)
// ActionPatternElement: APE8
// 	Parents: AP2
// 	Children: RotateRight
//	Order=6
PLAN A L 20 18 6 6

// (NULL)
// ActionPatternElement: APE9
// 	Parents: AP2
// 	Children: Go1
//	Order=3
PLAN A L 21 18 10 3

// Action: Go1
// 	Parents: APE3, DriveToDest, APE9
//	Action=SetSpeed
//	ActionValue=2
PLAN A A 10 5 2

// Action: Sleep
// 	Parents: APE10, APE4
//	Action=Sleep
//	ActionValue=3
PLAN A A 7 10 3

// Template for Drives
// Drive: DriveToDest
// 	Children: Go1
//	Priority=220
//	Interval=0
//	Sense=IsDest
//	Comparator=LT	// EQ, NE, GT, LT, TR, FL
//	SenseValue=25
//	SenseHysteresis=0
//	SenseFlexLatchHysteresis=0
//	RampIncrement=0
//	UrgencyMultiplier=0
//	RampInterval=0
PLAN A D 16 10 220 0 10 3 25 0 0 0 0 0

// *** Plan Element Names follow ... ***

// Template for Drives
// Drive: FrontObstLeft
PELEM FrontObstLeft=2

// Action: RotateRight
PELEM RotateRight=6

// (NULL)
// ActionPattern: AP2
PELEM AP2=18

// Template for Drives
// Drive: Stop
PELEM Stop=15

// ActionPattern: AP1
PELEM AP1=3

// Action: STOP
PELEM STOP=1

// Action: RotateLeft
PELEM RotateLeft=9

// Template for Drives
// Drive: FrontObstRight
PELEM FrontObstRight=17

// Action: STOP1
PELEM STOP1=8

// (NULL)
// ActionPatternElement: APE12
PELEM APE12=24

// (NULL)
// ActionPatternElement: APE10
PELEM APE10=22

// (NULL)
// ActionPatternElement: APE11
PELEM APE11=23

// ActionPatternElement: APE1
PELEM APE1=4

// ActionPatternElement: APE2
PELEM APE2=5

// ActionPatternElement: APE3
PELEM APE3=11

// ActionPatternElement: APE4
PELEM APE4=12

// ActionPatternElement: APE5
PELEM APE5=13

// ActionPatternElement: APE6
PELEM APE6=14

// (NULL)
// ActionPatternElement: APE7
PELEM APE7=19

// (NULL)
// ActionPatternElement: APE8
PELEM APE8=20

// (NULL)
// ActionPatternElement: APE9
PELEM APE9=21

// Action: Go1
PELEM Go1=10

// Action: Sleep
PELEM Sleep=7

// Template for Drives
// Drive: DriveToDest
PELEM DriveToDest=16

// *** Plan output complete. RobotSenses and RobotActions follow ... ***

// Return true if a potential mate is detected
// RobotSense: SenseMate
//	SenseID=9
RSENSE SenseMate=9

// Returns random number 1-100
// RobotSense: Random
//	SenseID=7
RSENSE Random=7

// Return true if a potential mate is detected
// RobotSense: IsDest
//	SenseID=10
RSENSE IsDest=10

// Returns 50
// RobotSense: Fifty
//	SenseID=8
RSENSE Fifty=8

// Rear left sensor - returns 0-4
// RobotSense: RearLeft
//	SenseID=3
RSENSE RearLeft=3

// Front sensor - returns 0-4
// RobotSense: FrontC
//	SenseID=5
RSENSE FrontC=5

// Front left sensor - returns 0-4
// RobotSense: FrontLeft
//	SenseID=1
RSENSE FrontLeft=1

// RobotSense: FrontMin
//	SenseID=11
RSENSE FrontMin=11

// Rear right sensor - returns 0-4
// RobotSense: RearRight
//	SenseID=4
RSENSE RearRight=4

// Front right sensor - returns 0-4
// RobotSense: FrontRight
//	SenseID=2
RSENSE FrontRight=2

// Rear sensor - returns 0-4
// RobotSense: Rear
//	SenseID=6
RSENSE Rear=6

// Always suceed
// RobotAction: RotateRight
//	ActionID=7
RACTION RotateRight=7

// Sleep for ActionValue clock cycles
// RobotAction: SetSpeed
//	ActionID=5
RACTION SetSpeed=5

// Srt the robot speed in units per clock tick.
// RobotAction: Slp
//	ActionID=1
RACTION Slp=1

// Stop moving.
// RobotAction: Stop
//	ActionID=6
RACTION Stop=6

// Rotate clockwise by ActionValue degrees. Must be a multiple of 45
// RobotAction: Turn
//	ActionID=3
RACTION Turn=3

// Move in the direction of travel by ActionValue units
// RobotAction: MoveBy
//	ActionID=2
RACTION MoveBy=2

// RobotAction: Sleep
//	ActionID=10
RACTION Sleep=10

// Always fail
// RobotAction: Fail
//	ActionID=16
RACTION Fail=16

// Mate with conspecific
// RobotAction: RotateLeft
//	ActionID=8
RACTION RotateLeft=8

// *** Output completed. ***
